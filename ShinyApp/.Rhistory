labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#fabed4","#a9a9a9","#f58231","#808000","#dcbeff","#469990","#bfef45","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#fabed4","#a9a9a9","#f58231","#808000","#dcbeff","#469990","#3cb44b","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#f032e6","#a9a9a9","#f58231","#808000","#dcbeff","#469990","#3cb44b","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#c50275","#a9a9a9","#f58231","#808000","#dcbeff","#469990","#3cb44b","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#c50275","#a9a9a9","#f58231","#fabed4","#dcbeff","#469990","#3cb44b","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#c50275","#a9a9a9","#f58231","#fabed4","#dcbeff","#469990","green","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#c50275","#a9a9a9","#f58231","#fabed4","#dcbeff","#007c7c","#4a9528","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
legend_text = ""
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == 2021)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region_Num", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Region_Num
data <- cbind(mdata,var1)
data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#4363d8","#aaffc3","#911eb4","#42d4f4","#c50275","#a9a9a9","#f58231","#fabed4","#dcbeff","#007c7c","#98D640","#ffe119")
labels <- c()
brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c("Alamo","Capital","Central","Gulf Coast","High Plains","Metroplex","Northwest","Southeast","South","Upper East","Upper Rio Grande","West"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 12,
byrow = F,
reverse = F,
label.position = "left"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="right")
create_homes_removals_plot(map_data, 2021)
the_list <- extract_priority_list2(map_data, 2021)
bar <- extract_dataframe(map_data, 2021)
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Econ_Region")
table(high_need_df$Econ_Region)
high_need_df <- within(high_need_df,
Econ_Region<- factor(Econ_Region,
levels=names(sort(table(Econ_Region),
decreasing=FALSE))))
ggplot(high_need_df, aes(y = Econ_Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + labs(y = "Texas Region", x = "High-need County Count")
create_homes_removals_plot(map_data, 2021)
the_list <- extract_priority_list2(map_data, 2021)
bar <- extract_dataframe(map_data, 2021)
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Econ_Region")
table(high_need_df$Econ_Region)
high_need_df <- within(high_need_df,
Econ_Region<- factor(Econ_Region,
levels=names(sort(table(Econ_Region),
decreasing=FALSE))))
ggplot(high_need_df, aes(y = Econ_Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=20, angle=0)) + labs(y = "Texas Region", x = "High-need County Count")
create_homes_removals_plot(map_data, 2021)
the_list <- extract_priority_list2(map_data, 2021)
bar <- extract_dataframe(map_data, 2021)
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Econ_Region")
table(high_need_df$Econ_Region)
high_need_df <- within(high_need_df,
Econ_Region<- factor(Econ_Region,
levels=names(sort(table(Econ_Region),
decreasing=FALSE))))
ggplot(high_need_df, aes(y = Econ_Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "Texas Region", x = "High-need County Count")
create_homes_removals_plot(map_data, 2021)
the_list <- extract_priority_list2(map_data, 2021)
bar <- extract_dataframe(map_data, 2021)
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Econ_Region")
table(high_need_df$Econ_Region)
high_need_df <- within(high_need_df,
Econ_Region<- factor(Econ_Region,
levels=names(sort(table(Econ_Region),
decreasing=FALSE))))
ggplot(high_need_df, aes(y = Econ_Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "Texas Region", x = "High-need County Count")
create_homes_removals_plot(map_data, 2021)
the_list <- extract_priority_list2(map_data, 2021)
bar <- extract_dataframe(map_data, 2021)
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Econ_Region")
table(high_need_df$Econ_Region)
high_need_df <- within(high_need_df,
Econ_Region<- factor(Econ_Region,
levels=names(sort(table(Econ_Region),
decreasing=FALSE))))
ggplot(high_need_df, aes(y = Econ_Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "Texas Region", x = "High-need County Count", size = 12)
create_homes_removals_plot(map_data, 2021)
the_list <- extract_priority_list2(map_data, 2021)
bar <- extract_dataframe(map_data, 2021)
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Econ_Region")
table(high_need_df$Econ_Region)
high_need_df <- within(high_need_df,
Econ_Region<- factor(Econ_Region,
levels=names(sort(table(Econ_Region),
decreasing=FALSE))))
ggplot(high_need_df, aes(y = Econ_Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "Texas Region", x = "High-need County Count") + theme(text = element_text(size = 14))
