#  return(bivar_plot)
#} # END OF FUNCTION
bivar_plot
toString(sort(data$County[data$fips %in% (foo$fips[foo$fill=="#5a3f49"])]))
county = "Travis"
Homes %>% filter(County == county) %>% group_by(Type) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Type, y = Total, fill = Type)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle(paste(input$YourCounty," County",sep="")) +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% filter(County == county) %>% group_by(Type) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Type, y = Total, fill = Type)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
Homes %>% filter(County == county) %>% group_by(Type) %>% summarise(Total = sum(Count))
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count))
county = "Travis"
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count))
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Type, y = Total, fill = Type)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count))
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Type, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count))
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Year, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count))
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Year, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
Removals %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Removals)) %>%
ggplot(aes(x =  Year, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
View(Homes)
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count))
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
View(Homes)
runApp()
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
Homes %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Year, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
Removals %>% filter(County == county) %>% group_by(Year) %>% summarise(Total = sum(Removals)) %>%
ggplot(aes(x =  Year, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
View(map_data)
View(map_data)
map_data %>% filter(County == county) %>% group_by(Year)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K") %>%
ggplot(aes(x =  Year, y = Total)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K") %>%
ggplot(aes(x =  Year, y = Homes_Total_County_per100K)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Removals_Total_County_per1K") %>%
ggplot(aes(x =  Year, y = Removals_Total_County_per1K)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
runApp()
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K") %>%
ggplot(aes(x =  Year, y = Homes_Total_County_per100K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Removals_Total_County_per1K") %>%
ggplot(aes(x =  Year, y = Removals_Total_County_per1K)) +
geom_bar(stat = 'identity') +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K", ) %>%
ggplot(aes(x =  Year, y = Homes_Total_County_per100K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Removals_Total_County_per1K") %>%
ggplot(aes(x =  Year, y = Removals_Total_County_per1K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
View(map_data)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(usmap)
library(gridExtra)
# library(usmap)
texas0<-read.csv("../Data/Texas_Counties_Centroid_Map.csv")
texas0 = rename(texas0, lat = X..Lat.)
texas0 = rename(texas0, lon = Y..Long.)
texas0$group = replicate(254,1)
texas0 = rename(texas0, fips = FIPS)
texas0 <- texas0 %>% mutate(CNTY_NM = replace(CNTY_NM, CNTY_NM == "De Witt", "DeWitt"))
write_csv(texas0, "CData/texas0.csv")
# Texas Children (Population)
Children_TX <- read_csv("../Data/CPI_1.1_Texas_Child_Population__ages_0-17__by_County_2010-2020.csv")
Children_TX <- Children_TX %>% filter(County != "All Counties")
# Cleaning Raw Data
Children_TX$Year = as.factor(Children_TX$Year)
Children_TX = rename(Children_TX, Child_Population = `Child Population`)
Children_TX = rename(Children_TX, Total_Population = `Total Population`)
write_csv(Children_TX, "CData/Children_TX.csv")
texas_children <- merge(texas0, Children_TX, by.x = "CNTY_NM", by.y = 'County', all = TRUE) %>% select("lon", "lat", "fips", "CNTY_NM","Region","Child_Population","Total_Population", "Year") %>% rename(County = CNTY_NM)
# Waiting for Adoption
Adopt_Need <- read_csv("../Data/CPS_4.1_Adoption_-_Children_Waiting_For_Adoption_on_31_August_by_County_FY2011_-_2020.csv")
Adopt_Need = rename(Adopt_Need, Year = `Fiscal Year`)
Adopt_Need$Year = as.factor(Adopt_Need$Year)
Adopt_Need = rename(Adopt_Need, Count = `Children Wating for Adoption on 31 August`)
# renaming and changing order of factors for plotting
Adopt_Need <- Adopt_Need %>% rename(`Placement Intention` = `Current Placement Status`)
Adopt_Need$`Placement Intention`[which(Adopt_Need$`Placement Intention` == "Placement Not Intended to be Permanent")] <- "Not Permanent"
Adopt_Need$`Placement Intention`[which(Adopt_Need$`Placement Intention` == "Placement Intended to be Permanent")] <- "Permanent"
Adopt_Need$`Placement Intention` = as.factor(Adopt_Need$`Placement Intention`)
Adopt_Need$`Placement Intention` <- factor(Adopt_Need$`Placement Intention`, levels = c("Permanent", "Not Permanent"))
write_csv(Adopt_Need, "CData/Adopt_Need.csv")
# Map Data Organizing (we need county totals)
Adopt_Need_byCounty <- Adopt_Need %>% group_by(County, Year) %>% mutate(Total_County = sum(Count)) %>%
select("Year","County","Region","Total_County") %>%
distinct("County", "Year", .keep_all = TRUE) %>%
select("Year","County","Region","Total_County")
texas_Adopt_Need <- merge(texas0, Adopt_Need_byCounty, by.x = "CNTY_NM", by.y = 'County', all = TRUE) %>% select("lon", "lat", "fips", "CNTY_NM","Region", "Total_County", "Year") %>% rename(County = CNTY_NM)
texas_Adopt_Need = rename(texas_Adopt_Need, Adopt_Need_Total_County = Total_County)
# Homes
Homes <- read_csv("../Data/CPS_4.2_Adoption_-_DFPS_Foster__Foster_Adoptive__and_Adoptive__FAD__Homes_FY2011_-_2020.csv")
# Cleaning Raw Data
Homes = rename(Homes, Year = `Fiscal Year`)
Homes$Year = as.factor(Homes$Year)
Homes = rename(Homes, Count = Homes)
Homes = rename(Homes, Type = `Type of FAD Home`)
Homes$Type[which(Homes$Type == "Adoptive Homes")] <- "Adoptive"
Homes$Type[which(Homes$Type == "Foster/Adoptive Homes")] <- "Foster/Adoptive"
Homes$Type[which(Homes$Type == "Foster Homes")] <- "Foster"
# renaming and changing order of factors for plotting
Homes$Type = as.factor(Homes$Type)
Homes$Type <- factor(Homes$Type, levels = c("Foster/Adoptive", "Adoptive", "Foster"))
write_csv(Homes, "CData/Homes.csv")
Homes %>% group_by(Year, Type) %>% summarise(Total = sum(Count)) %>%
ggplot(aes(x =  Year, y = Total, fill = Type)) +
geom_bar(stat = 'identity')
# Map Data Organizing (we need county totals)
Homes_byCounty <- Homes %>% group_by(County, Year) %>% mutate(Total_County = sum(Count)) %>%
select("Year","County","Region","Total_County") %>%
distinct("County", "Year", .keep_all = TRUE) %>%
select("Year","County","Region","Total_County")
texas_homes <- merge(texas0, Homes_byCounty, by.x = "CNTY_NM", by.y = 'County') %>% select("lon", "lat", "fips", "CNTY_NM","Region","Total_County","Year") %>% rename(County = CNTY_NM)
texas_homes = rename(texas_homes, Homes_Total_County = Total_County)
# Removals
Removals <- read_csv("../Data/CPS_2.1_Removals_-_by_County_FY2011-2020.csv")
# Cleaning Raw Data
Removals = rename(Removals, Year = `Fiscal Year`)
Removals$Year = as.factor(Removals$Year)
write_csv(Removals, "CData/Removals.csv")
Removals %>% group_by(Year,`Removal Stage`) %>% summarise(Total = sum(Removals)) %>%
ggplot(aes(x =  Year, y = Total, fill = `Removal Stage`)) +
geom_bar(stat = 'identity')
# Map Data Organizing (we need county totals)
Removals_byCounty <- Removals %>% group_by(County, Year) %>% mutate(Total_County = sum(Removals)) %>%
select("Year","County","Region","Total_County") %>%
distinct("County", "Year", .keep_all = TRUE) %>%
select("Year","County","Region","Total_County")
texas_Removals <- merge(texas0, Removals_byCounty, by.x = "CNTY_NM", by.y = 'County') %>% select("lon", "lat", "fips", "CNTY_NM","Region","Total_County","Year") %>% rename(County = CNTY_NM)
texas_Removals = rename(texas_Removals, Removals_Total_County = Total_County)
map_data <- texas_children %>% merge(texas_Adopt_Need, by=c("Region","County","Year","fips","lon","lat"), all = TRUE) %>%
merge(texas_homes, by=c("Region","County","Year","fips","lon","lat"), all = TRUE) %>%
merge(texas_Removals, by=c("Region","County","Year","fips","lon","lat"), all = TRUE)
# Create new variables
map_data$Homes_Total_County_per100K = (map_data$Homes_Total_County/map_data$Total_Population)*100000
map_data$Removals_Total_County_per1K = (map_data$Removals_Total_County/map_data$Child_Population)*1000
# Change NAs to Zeros
map_data$Adopt_Need_Total_County[is.na(map_data$Adopt_Need_Total_County)] <- 0
map_data$Homes_Total_County[is.na(map_data$Homes_Total_County)] <- 0
map_data$Removals_Total_County[is.na(map_data$Removals_Total_County)] <- 0
map_data$Removals_Total_County[is.na(map_data$Removals_Total_County)] <- 0
map_data$Homes_Total_County_per100K[is.na(map_data$Homes_Total_County_per100K)] <- 0
map_data$Removals_Total_County_per1K[is.na(map_data$Removals_Total_County_per1K)] <- 0
# Remove these missing rows
map_data <-map_data[!(is.na(map_data$Year)),]
map_data <-map_data[!(map_data$Year == "2010"),]
write_csv(map_data, "CData/Shiny_map_data.csv")
View(map_data)
library(shiny)
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(usmap)
library(stringr)
# ------------------------
# import data
# ------------------------
Children_TX <-read.csv("CData/Children_TX.csv")
Adopt_Need <-read.csv("CData/Adopt_Need.csv")
Homes <-read.csv("CData/Homes.csv")
Removals <-read.csv("CData/Removals.csv")
map_data <- read.csv("CData/Shiny_map_data.csv")
year = "2020"
# ------------------------
# Functions
# ------------------------
# Bivariate Plotting Function
#create_homes_removals_plot <- function(map_data, year) {
color_map = c("#da4f58","#eda8a9","#e8e7e6",
"#a44c55","#b09ca5","#a4d5e1",
"#5a3f49","#5b7d8f","#43aac0")
x_text = "More Removals ->"
y_text = "More Homes ->"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# -----------------------------------------
# Determine the breaks:
# Need non-zero data to determine breaks
x_nonzero <- filter(map_data_year, Removals_Total_County_per1K != 0)
y_nonzero <- filter(map_data_year, Homes_Total_County_per100K != 0)
x_brk_points = c(quantile(x_nonzero$Removals_Total_County_per1K, 0.30),
quantile(x_nonzero$Removals_Total_County_per1K, 0.60))
y_brk_points = c(quantile(y_nonzero$Homes_Total_County_per100K, 0.30),
quantile(y_nonzero$Homes_Total_County_per100K, 0.60))
# -----------------------------------------
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Removals_Total_County_per1K
var2 = map_data_year$Homes_Total_County_per100K
data <- cbind(mdata,var1,var2)
x = as.numeric(unlist(data[7]))
y = as.numeric(unlist(data[8]))
# create 3 buckets for variable 1
quantiles_x <- quantile(x,
probs = c(0,ecdf(x)(x_brk_points[1]),
ecdf(x)(x_brk_points[2]),1), na.rm = TRUE)
# create 3 buckets for variable 2
quantiles_y <- quantile(y,
probs = c(0,ecdf(y)(y_brk_points[1]),
ecdf(y)(y_brk_points[2]),1), na.rm = TRUE)
# create color scale that encodes two variables
bivariate_color_scale <- tibble(
"3 - 3" = color_map[1], # high X, high Y
"2 - 3" = color_map[2],
"1 - 3" = color_map[3], # low X, high Y
"3 - 2" = color_map[4],
"2 - 2" = color_map[5], # medium X, medium Y
"1 - 2" = color_map[6],
"3 - 1" = color_map[7], # high X, low Y
"2 - 1" = color_map[8],
"1 - 1" = color_map[9] # low X, low Y
) %>%
gather("group", "fill")
# cut into groups defined above and join fill
bar <- data %>%
mutate(
x_quantiles = cut(
x,
breaks = quantiles_x,
include.lowest = TRUE
),
y_quantiles = cut(
y,
breaks = quantiles_y,
include.lowest = TRUE
),
group = paste(
as.numeric(x_quantiles), "-",
as.numeric(y_quantiles)
)
) %>%
# we now join the actual hex values per "group"
# so each county has a hex value based on x and y
left_join(bivariate_color_scale, by = "group")
foo = bar %>% select(fips,fill)
colours = color_map
## ----------------------------------------------------------------
map <- plot_usmap(data = foo, values = "fill", include = c("TX"), color = "black", ) +
scale_fill_manual(
values = colours,
breaks = colours,
drop = FALSE, na.value = "white") + theme(legend.position = "none")
# CREATE THE LEGEND
group = c("3 - 3", "2 - 3", "1 - 3",
"3 - 2", "2 - 2", "1 - 2",
"3 - 1","2 - 1", "1 - 1")
fill = color_map
leg_data <- data.frame(group, fill)
# Create the legend
# separate the groups
leg_data %<>%
separate(group, into = c("x", "y"), sep = " - ") %>%
mutate(x = as.integer(x),
y = as.integer(y))
legend <- ggplot() +
geom_tile(
data = leg_data,
mapping = aes(
x = x,
y = y,
fill = color_map)
) +
scale_fill_identity() +
ylab(y_text) +
xlab(x_text) +
theme(axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(), axis.text.y=element_blank(),
axis.title = element_text(size = 6)) +
coord_fixed() +
theme(plot.background = element_rect(color = "white", fill = "white"))
bivar_plot <- ggdraw() +
draw_plot(map, 0, 0, 1, 1) +
draw_plot(legend, 0.05, 0.05, 0.3, 0.3)
#  return(bivar_plot)
#} # END OF FUNCTION
bivar_plot
toString(sort(data$County[data$fips %in% (foo$fips[foo$fill=="#5a3f49"])]))
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K", ) %>%
ggplot(aes(x =  Year, y = Homes_Total_County_per100K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Removals_Total_County_per1K") %>%
ggplot(aes(x =  Year, y = Removals_Total_County_per1K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
theme(axis.title.y = element_blank()) +
theme(legend.position = "none") +
theme(axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
county = "Travis"
Homes %>% group_by(Year, County) %>% summarise(Total = sum(Count)) %>% filter(County == county)
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K")
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Homes_Total_County_per100K", ) %>%
ggplot(aes(x =  Year, y = Homes_Total_County_per100K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
map_data %>% filter(County == county) %>% group_by(Year) %>% select("Removals_Total_County_per1K") %>%
ggplot(aes(x =  Year, y = Removals_Total_County_per1K)) +
geom_line() + geom_point() +
theme(axis.text.x = element_text(color="black", size=9, angle=0)) +
ggtitle("") +
scale_fill_manual(values=c("blue", "#028140", "#2e4873")) +
xlab("") +
theme(plot.background = element_rect(fill = "#dbc9c3"))
