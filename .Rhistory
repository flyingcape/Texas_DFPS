brks <- c(0,1, 2, 3, 4, 5, 6, 7, 8, 9,10,11)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = c(" 1   Lubbock"," 2   Abilene"," 3   Arlington"," 4   Tyler"," 5   Beaumont"," 6   Houston"," 7   Austin"," 8   San Antonio"," 9   Midland","10  El Paso","11  Edinburg"),
guide = guide_legend(
direction = "vertical",
keyheight = unit(6, units = "mm"),
keywidth = unit(100 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 0,
nrow = 12,
byrow = F,
reverse = F,
label.position = "right"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=14)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="left")
#library(ragg)
#ragg::agg_png("ragg_5x5.png", width = 5, height = 5, units = "in", res = 300, scaling = 0.5)
#fig01
#dev.off()
Homes_Year <- Homes %>% filter(CBC == "DFPS") %>% group_by(Year, Type) %>% summarise(Total_Homes = sum(Count))
Population_Year <- map_data %>% filter(CBC == "DFPS") %>% group_by(Year) %>% summarise(Total_Pop = sum(Total_Population))
Homes_Population_Year <- Homes_Year %>% merge(Population_Year,by=c("Year"))
Homes_Population_Year$HomesPer100K = (Homes_Population_Year$Total_Homes/Homes_Population_Year$Total_Pop)*100000
ylab_test <-("FAD Homes\nPer 100K\nResidents")
Homes_Population_Year %>% filter(Year %in% c(2011,2013,2015,2017,2019,2021)) %>% ggplot(aes(x =  Year, y = HomesPer100K, fill=Type)) +
geom_bar(stat = 'identity') +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=12, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) +
ylab("FAD Homes Per 100K residents") +
scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) + ylab(ylab_test) + theme(axis.title.y=element_text(angle=0,vjust=0.55,hjust=0.50)) +
scale_fill_manual(name = "Home Type", values = c("#636363","#aeaeae","black"))
Removals_Year <- Removals %>% group_by(Year, Removal.Stage) %>% summarise(Total_Removals = sum(Removals))
Child_Population_Year <- map_data %>% group_by(Year) %>% summarise(Child_Pop = sum(Child_Population))
Removals_Population_Year <- Removals_Year %>% merge(Child_Population_Year,by=c("Year"))
Removals_Population_Year$RemovalsPer1K = (Removals_Population_Year$Total_Removals/Child_Population_Year$Child_Pop)*1000
ylab_test <-("Removals\n Per 1K \nChildren")
Removals_Population_Year %>% filter(Year %in% c(2011,2013,2015,2017,2019,2021)) %>% ggplot(aes(x =  Year, y = RemovalsPer1K, fill=Removal.Stage)) +
geom_bar(stat = 'identity') +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) +
scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) + ylab(ylab_test) + theme(axis.title.y=element_text(angle=0,vjust=0.45)) + ylim(0,3.01) +
scale_fill_manual(name = "Removal Stage", values = c("#55565B","black"))
Removals_Year <- Removals %>% group_by(Year, Removal.Stage) %>% summarise(Total_Removals = sum(Removals))
Child_Population_Year <- map_data %>% group_by(Year) %>% summarise(Child_Pop = sum(Child_Population))
Removals_Population_Year <- Removals_Year %>% merge(Child_Population_Year,by=c("Year"))
Removals_Population_Year$RemovalsPer1K = (Removals_Population_Year$Total_Removals/Child_Population_Year$Child_Pop)*1000
ylab_test <-("Removals\n Per 1K \nChildren")
Removals_Population_Year %>% filter(Year %in% c(2011,2013,2015,2017,2019,2021)) %>% ggplot(aes(x =  Year, y = RemovalsPer1K, fill=Removal.Stage)) +
geom_bar(stat = 'identity') +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) +
scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) + ylab(ylab_test) + theme(axis.title.y=element_text(angle=0,vjust=0.50)) + ylim(0,3.01) +
scale_fill_manual(name = "Removal Stage", values = c("#55565B","black"))
Removals_Year <- Removals %>% group_by(Year, Removal.Stage) %>% summarise(Total_Removals = sum(Removals))
Child_Population_Year <- map_data %>% group_by(Year) %>% summarise(Child_Pop = sum(Child_Population))
Removals_Population_Year <- Removals_Year %>% merge(Child_Population_Year,by=c("Year"))
Removals_Population_Year$RemovalsPer1K = (Removals_Population_Year$Total_Removals/Child_Population_Year$Child_Pop)*1000
ylab_test <-("Removals\n per 1K \nchildren")
Removals_Population_Year %>% filter(Year %in% c(2011,2013,2015,2017,2019,2021)) %>% ggplot(aes(x =  Year, y = RemovalsPer1K, fill=Removal.Stage)) +
geom_bar(stat = 'identity') +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) +
scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) + ylab(ylab_test) + theme(axis.title.y=element_text(angle=0,vjust=0.50)) + ylim(0,3.01) +
scale_fill_manual(name = "Removal Stage", values = c("#55565B","black"))
Homes_Year <- Homes %>% filter(CBC == "DFPS") %>% group_by(Year, Type) %>% summarise(Total_Homes = sum(Count))
Population_Year <- map_data %>% filter(CBC == "DFPS") %>% group_by(Year) %>% summarise(Total_Pop = sum(Total_Population))
Homes_Population_Year <- Homes_Year %>% merge(Population_Year,by=c("Year"))
Homes_Population_Year$HomesPer100K = (Homes_Population_Year$Total_Homes/Homes_Population_Year$Total_Pop)*100000
ylab_test <-("FAD Homes\nper 100K\nresidents")
Homes_Population_Year %>% filter(Year %in% c(2011,2013,2015,2017,2019,2021)) %>% ggplot(aes(x =  Year, y = HomesPer100K, fill=Type)) +
geom_bar(stat = 'identity') +
ggtitle("") +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=12, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) +
ylab("FAD Homes Per 100K residents") +
scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) + ylab(ylab_test) + theme(axis.title.y=element_text(angle=0,vjust=0.55,hjust=0.50)) +
scale_fill_manual(name = "Home Type", values = c("#636363","#aeaeae","black"))
Homes_Region <- Homes %>% filter(CBC == "DFPS") %>% group_by(Region, Year) %>% summarise(Total_Homes = sum(Count))
Population_Region <- Children_TX %>% group_by(Region, Year) %>% summarise(Total_Pop = sum(Total_Population))
Homes_toplot <- Homes_Region %>% merge(Population_Region,by=c("Region","Year"))
Homes_toplot$HomesPer100K = (Homes_toplot$Total_Homes/Homes_toplot$Total_Pop)*100000
colours = c("#42d4f4","#c50275")
#ylab_rot <- gsub(" ", "\n", "FAD Homes Per 100K Residents")
ylab_test <-("FAD Homes\nper 100K\nresidents")
Homes_toplot %>%  filter(Region %in% c("2-Abilene","9-Midland")) %>%
ggplot( aes(x=Year, y=HomesPer100K, group=Region, color = Region))+
geom_line(size=3.5, alpha=0.8) +
scale_colour_manual(name="DFPS Region",
values = colours,labels = c(" 2   Abilene"," 9   Midland")) +
scale_x_continuous(breaks = c(2011,2013,2015,2017,2019,2021)) + ylab(ylab_test) + theme(axis.title.y=element_text(angle=0,vjust=0.5)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,20)
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,16)
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1)
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,12)) + xlim(0,14.1)
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1)
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1) + theme(plot.margin = (0,0,0,0))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1)
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1) + theme(plot.margin = margin(t = 20,  # Top margin
r = 50,  # Right margin
b = 40,  # Bottom margin
l = 10))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1) + theme(plot.margin = margin(t = 20,  # Top margin
r = 30,  # Right margin
b = 40,  # Bottom margin
l = 10))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1) + theme(plot.margin = margin(t = 20,  # Top margin
r = 10,  # Right margin
b = 40,  # Bottom margin
l = 10))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1) + theme(plot.margin = margin(t = 10,  # Top margin
r = 25,  # Right margin
b = 10,  # Bottom margin
l = 10))
# ---------------------------------
# 2021 Bivariate Map
# ---------------------------------
create_homes_removals_plot(map_data, 2021, states)
# -----------------------------------------------------
# Examining WHERE the high-need counties are located
# -----------------------------------------------------
bar <- extract_dataframe(map_data, 2021) %>%  filter(CBC== "DFPS")
high_need_df <- filter(bar, fill=="#5a3f49") %>% select("Year", "County",
"Region")
table(high_need_df$Region)
high_need_df <- within(high_need_df,
Region<- factor(Region,
levels=names(sort(table(Region),
decreasing=FALSE))))
ylab_test <-("DFPS\n Region")
ggplot(high_need_df, aes(y = Region)) +
geom_bar(fill="#5a3f49") + theme(axis.text.x = element_text(color="black", size=12, angle=0)) + theme(axis.text.y = element_text(color="black", size=12, angle=0)) + labs(y = "DFPS Region", x = "County Count") + theme(text = element_text(size = 14)) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.text.x = element_text(color="black", size=12, angle=0)) +
theme(axis.text.y = element_text(color="black", size=14, angle=0)) +
theme(axis.title = element_text(size = 16)) +
theme(legend.text = element_text(size = 14)) +
theme(legend.title = element_text(size = 14))  +
theme(plot.title = element_text(size = 14)) + ylab(ylab_test)  + theme(axis.title.y=element_text(angle=0,vjust=0.5)) + scale_x_continuous(breaks = c(0,5,10,15)) + xlim(0,15.1) + theme(plot.margin = margin(t = 10,  # Top margin
r = 25,  # Right margin
b = 5,  # Bottom margin
l = 10))
