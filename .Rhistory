# create dataframe we will work with to plot
var1 = map_data_year$Removals_Total_County_per1K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#969696","#eda8a9","#cf3946")
labels <- c()
brks <- c(0,3, 5, 50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(75 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top")
return(univar_plot)
} # END OF FUNCTION # 3 updated
fig_homes <- create_homes_plot_simple_3brks(map_data, 2021)
fig_removals <- create_removals_plot_simple_3brks(map_data, 2021)
grid.arrange(fig_homes+theme(plot.title = element_text(hjust = 0.5)),fig_removals+theme(plot.title = element_text(hjust = 0.5)),
nrow = 1) +
theme(text=element_text(size=12)
) + theme(legend.text=element_text(size=10))
# Map Function with 3 Breaks
create_homes_plot_simple_3brks <- function(map_data, year) {
legend_text = "FAD Homes per 100K residents"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Homes_Total_County_per100K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#43aabf","#a4d5e1","#969696")
labels <- c()
brks <- c(0,6,11,50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top") # was "bottom"
return(univar_plot)
} # END OF FUNCTION # 2 updated
create_removals_plot_simple_3brks <- function(map_data, year) {
legend_text = "Removals per 1K children"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Removals_Total_County_per1K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#969696","#eda8a9","#cf3946")
labels <- c()
brks <- c(0,3, 5, 50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top")
return(univar_plot)
} # END OF FUNCTION # 3 updated
fig_homes <- create_homes_plot_simple_3brks(map_data, 2021)
fig_removals <- create_removals_plot_simple_3brks(map_data, 2021)
grid.arrange(fig_homes+theme(plot.title = element_text(hjust = 0.5)),fig_removals+theme(plot.title = element_text(hjust = 0.5)),
nrow = 1) +
theme(text=element_text(size=12)
) + theme(legend.text=element_text(size=10))
fig_homes <- create_homes_plot_simple_3brks(map_data, 2021)
fig_removals <- create_removals_plot_simple_3brks(map_data, 2021)
grid.arrange(fig_homes+theme(plot.title = element_text(hjust = 0.5)),fig_removals+theme(plot.title = element_text(hjust = 0.5)),
nrow = 1) +
theme(text=element_text(size=10)
) + theme(legend.text=element_text(size=10))
# Map Function with 3 Breaks
create_homes_plot_simple_3brks <- function(map_data, year) {
legend_text = "FAD Homes per 100K residents"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Homes_Total_County_per100K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#43aabf","#a4d5e1","#969696")
labels <- c()
brks <- c(0,6,11,50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top") # was "bottom"
return(univar_plot)
} # END OF FUNCTION # 2 updated
create_removals_plot_simple_3brks <- function(map_data, year) {
legend_text = "Removals per 1K children"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Removals_Total_County_per1K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#969696","#eda8a9","#cf3946")
labels <- c()
brks <- c(0,3, 5, 50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top") + theme(text=element_text(size=10)
return(univar_plot)
# Map Function with 3 Breaks
create_homes_plot_simple_3brks <- function(map_data, year) {
legend_text = "FAD Homes per 100K residents"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Homes_Total_County_per100K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#43aabf","#a4d5e1","#969696")
labels <- c()
brks <- c(0,6,11,50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top") # was "bottom"
return(univar_plot)
} # END OF FUNCTION # 2 updated
create_removals_plot_simple_3brks <- function(map_data, year) {
legend_text = "Removals per 1K children"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Removals_Total_County_per1K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#969696","#eda8a9","#cf3946")
labels <- c()
brks <- c(0,3, 5, 50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top") + theme(text=element_text(size=10))
return(univar_plot)
} # END OF FUNCTION # 3 updated
fig_homes <- create_homes_plot_simple_3brks(map_data, 2021)
fig_removals <- create_removals_plot_simple_3brks(map_data, 2021)
grid.arrange(fig_homes+theme(plot.title = element_text(hjust = 0.5)),fig_removals+theme(plot.title = element_text(hjust = 0.5)),
nrow = 1) +
theme(text=element_text(size=10)
) + theme(legend.text=element_text(size=10))
# Map Function with 3 Breaks
create_homes_plot_simple_3brks <- function(map_data, year) {
legend_text = "FAD Homes per 100K residents"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Homes_Total_County_per100K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#43aabf","#a4d5e1","#969696")
labels <- c()
brks <- c(0,6,11,50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top")  + theme(text=element_text(size=12))
return(univar_plot)
} # END OF FUNCTION # 2 updated
create_removals_plot_simple_3brks <- function(map_data, year) {
legend_text = "Removals per 1K children"
# Filter for Chosen Year
map_data_year <- filter(map_data, Year == year)
# Building the parts of the dataframe we will work with
mdata <- map_data_year %>% select("Year", "County",
"Region", "fips", "lon", "lat")
# create dataframe we will work with to plot
var1 = map_data_year$Removals_Total_County_per1K
data <- cbind(mdata,var1)
#data$var1[data$var1==0] <- NA
# --------------------------------
# Compute scale
# --------------------------------
colours = c("#969696","#eda8a9","#cf3946")
labels <- c()
brks <- c(0,3, 5, 50)
for(idx in 1:length(brks)){
labels <- c(labels,round(brks[idx + 1], 2))
}
labels <- labels[1:length(labels)-1]
# define a new variable on the data set just as above
data$brks <- cut(data$var1,
breaks = brks,
include.lowest = TRUE,
labels = labels)
brks_scale <- levels(data$brks)
labels_scale <- (brks_scale)
# --------------------------------
univar_plot <-plot_usmap(data = data, values = "brks", include = c("TX"), color = "black") +
theme_map() +
scale_fill_manual(
values = colours,
name = legend_text,
drop = FALSE,
labels = labels_scale,
guide = guide_legend(
direction = "horizontal",
keyheight = unit(6, units = "mm"),
keywidth = unit(65 / length(labels), units = "mm"),
title.position = 'top',
title.hjust = 0,
label.hjust = 1,
nrow = 1,
byrow = T,
reverse = F,
label.position = "bottom"),
na.translate = FALSE) +
theme(plot.background = element_rect(color = "white", fill = "white")) +
theme(legend.text=element_text(size=12)) +
theme(legend.background = element_rect(color = "white", fill = "white")) +
theme(legend.position="top") + theme(text=element_text(size=12))
return(univar_plot)
} # END OF FUNCTION # 3 updated
fig_homes <- create_homes_plot_simple_3brks(map_data, 2021)
fig_removals <- create_removals_plot_simple_3brks(map_data, 2021)
grid.arrange(fig_homes+theme(plot.title = element_text(hjust = 0.5)),fig_removals+theme(plot.title = element_text(hjust = 0.5)),
nrow = 1)
runApp('ShinyApp')
runApp('ShinyApp')
